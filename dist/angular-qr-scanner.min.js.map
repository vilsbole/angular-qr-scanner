{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/qr-scanner.js","webpack:///./src/index.js","webpack:///./src/jsqrcode-combined.min.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","angular","directive","$interval","$window","restrict","scope","ngSuccess","ngError","ngVideoError","link","element","attrs","window","URL","webkitURL","mozURL","msURL","height","width","video","document","createElement","setAttribute","canvas","append","stopScan","context","getContext","scan","srcObject","drawImage","qrcode","decode","e","error","navigator","mediaDevices","getUserMedia","facingMode","front","then","stream","play","callback","data","getTracks","forEach","track","stop","cancel","__webpack_exports__","_qr_scanner__WEBPACK_IMPORTED_MODULE_0__","__WEBPACK_IMPORT_KEY__","ECB","count","dataCodewords","this","__defineGetter__","ECBlocks","ecCodewordsPerBlock","ecBlocks1","ecBlocks2","ecBlocks","Array","NumBlocks","total","length","getECBlocks","Version","versionNumber","alignmentPatternCenters","ecBlocks3","ecBlocks4","ecCodewords","ECCodewordsPerBlock","ecbArray","ecBlock","Count","DataCodewords","totalCodewords","buildFunctionPattern","dimension","DimensionForVersion","bitMatrix","BitMatrix","setRegion","max","x","y","getECBlocksForLevel","ecLevel","ordinal","PerspectiveTransform","a11","a21","a31","a12","a22","a32","a13","a23","a33","transformPoints1","points","denominator","transformPoints2","xValues","yValues","buildAdjoint","times","other","Detector","image","resultPointCallback","sizeOfBlackWhiteBlackRun","fromX","fromY","toX","toY","steep","Math","abs","temp","dx","dy","ystep","xstep","state","realX","realY","diffX","diffY","sqrt","diffX2","diffY2","sizeOfBlackWhiteBlackRunBothWays","result","scale","otherToX","otherToY","floor","calculateModuleSizeOneWay","pattern","otherPattern","moduleSizeEst1","X","Y","moduleSizeEst2","isNaN","calculateModuleSize","topLeft","topRight","bottomLeft","distance","pattern1","pattern2","xDiff","yDiff","computeDimension","moduleSize","round","findAlignmentInRegion","overallEstModuleSize","estAlignmentX","estAlignmentY","allowanceFactor","allowance","alignmentAreaLeftX","alignmentAreaRightX","min","alignmentAreaTopY","alignmentAreaBottomY","startX","startY","possibleCenters","crossCheckStateCount","centerFromEnd","stateCount","end","foundPatternCross","maxVariance","crossCheckVertical","startI","centerJ","maxCount","originalStateCountTotal","maxI","NaN","stateCountTotal","handlePossibleCenter","j","centerI","estimatedModuleSize","index","center","aboutEquals","AlignmentPattern","point","push","foundPossibleResultPoint","find","maxJ","middleI","iGen","currentState","confirmed","createTransform","alignmentPattern","bottomRightX","bottomRightY","sourceBottomRightX","sourceBottomRightY","dimMinusThree","quadrilateralToQuadrilateral","sampleGrid","transform","GridSampler","sampleGrid3","processFinderPatternInfo","info","TopLeft","TopRight","BottomLeft","provisionalVersion","getProvisionalVersionForDimension","modulesBetweenFPCenters","AlignmentPatternCenters","correctionToTopLeft","bits","detect","hasSkipped","totalModuleSize","INTEGER_MATH_SHIFT","CrossCheckStateCount","crossCheckHorizontal","startJ","found","incrementCount","posX","posY","moduleSizeDiff","selectBestPatterns","startSize","square","centerValue","EstimatedModuleSize","average","sort","center1","center2","dA","dB","stdDev","limit","remove","a","b","findRowSkip","firstConfirmedCenter","CENTER_QUORUM","haveMultiplyConfirmedCenters","confirmedCount","totalDeviation","findFinderPattern","iSkip","MAX_MODULES","MIN_SKIP","done","rowSkip","patternInfo","orderBestPatterns","patternCenters","FormatInformation","formatInfo","errorCorrectionLevel","ErrorCorrectionLevel","forBits","dataMask","GetHashCode","Equals","ordinal_Renamed_Field","rowSize","get_Renamed","offset","URShift","set_Renamed","flip","clear","left","top","right","bottom","DataBlock","numDataCodewords","codewords","GF256Poly","field","coefficients","coefficientsLength","firstNonZero","Zero","ci","getCoefficient","degree","evaluateAt","size","GF256","addOrSubtract","result2","multiply","smallerCoefficients","largerCoefficients","sumDiff","lengthDiff","multiply1","aCoefficients","aLength","bCoefficients","bLength","product","aCoeff","multiply2","scalar","multiplyByMonomial","coefficient","divide","quotient","remainder","denominatorLeadingTerm","Degree","inverseDenominatorLeadingTerm","inverse","degreeDifference","term","iterationQuotient","buildMonomial","primitive","expTable","logTable","at0","zero","at1","one","exp","log","number","checkAndNudgePoints","nudged","iValue","xpoint","bit","imagedata","aioobe","sampleGridx","p1ToX","p1ToY","p2ToX","p2ToY","p3ToX","p3ToY","p4ToX","p4ToY","p1FromX","p1FromY","p2FromX","p2FromY","p3FromX","p3FromY","p4FromX","p4FromY","VERSION_DECODE_INFO","VERSIONS","getVersionForNumber","iae","decodeVersionInformation","versionBits","bestDifference","bestVersion","targetVersion","bitsDifference","numBitsDiffering","x0","y0","x1","y1","x2","y2","x3","y3","x0p","y0p","x1p","y1p","x2p","y2p","x3p","y3p","qToS","quadrilateralToSquare","squareToQuadrilateral","dy2","dy3","dx1","dx2","dx3","dy1","FORMAT_INFO_DECODE_LOOKUP","BITS_SET_IN_HALF_BYTE","decodeFormatInformation","maskedFormatInfo","doDecodeFormatInformation","bestFormatInfo","decodeInfo","targetInfo","FOR_BITS","L","M","Q","H","getDataBlocks","rawCodewords","version","TotalCodewords","totalBlocks","ecBlockArray","numResultBlocks","numBlockCodewords","shorterBlocksTotalCodewords","longerBlocksStartAt","shorterBlocksNumDataCodewords","rawCodewordsOffset","iOffset","DataMask","forReference","reference","DATA_MASKS","unmaskBitMatrix","isMasked","QR_CODE_FIELD","DATA_MATRIX_FIELD","Decoder","rsDecoder","received","twoS","poly","syndromeCoefficients","noError","eval","syndrome","sigmaOmega","runEuclideanAlgorithm","sigma","omega","errorLocations","findErrorLocations","errorMagnitudes","findErrorMagnitudes","position","R","rLast","sLast","One","tLast","rLastLast","sLastLast","tLastLast","q","dltInverse","degreeDiff","sigmaTildeAtZero","errorLocator","numErrors","errorEvaluator","dataMatrix","xiInverse","correctErrors","codewordBytes","numCodewords","codewordsInts","numECCodewords","rse","parser","Dimension","parsedVersion","parsedFormatInfo","copyBit","readFormatInformation","formatInfoBits","iMin","readVersion","ijMin","readCodewords","functionPattern","readingUp","resultOffset","currentByte","bitsRead","col","dataBlocks","totalBytes","NumDataCodewords","resultBytes","dataBlock","Codewords","blocks","numErrorCorrectionCode","blockPointer","bitPointer","dataLength","dataLengthMode","getNextBits","numBits","mask","mask1","mask3","bitsFirstBlock","bitsSecondBlock","NextMode","getDataLength","modeIndicator","sizeOfDataLengthInfo","getRomanAndFigureString","intData","strData","tableRomanAndFigure","secondLetter","getFigureString","get8bitByteArray","output","getKanjiString","unicodeString","shiftjisWord","tempWord","String","fromCharCode","temp_str","ta","charCodeAt","temp_sbyteArray3","VersionNumber","Bits","qrCodeSymbol","debug","maxImgSize","src","arguments","canvas_qr","getElementById","getImageData","process","Image","onload","nheight","nwidth","ir","console","isUrl","test","decode_url","escaped","escape","ret","decodeURIComponent","decode_utf8","ctx","start","Date","getTime","grayScaleToBitmap","grayscale","putImageData","qRCodeMatrix","DataByte","str","time","getPixel","binarize","th","gray","getMiddleBrightnessPerArea","areaWidth","areaHeight","minmax","i2","ay","ax","target","middle","i3","grayScale","sqrtNumArea","bitmap","from","to","rest","slice","apply","patterns","pointA","pointB","pointC","zeroOneDistance","oneTwoDistance","zeroTwoDistance","bX","bY","crossProductZ"],"mappings":"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","file":"angular-qr-scanner.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\nrequire('./jsqrcode-combined.min');\n\n(function() {\n'use strict';\n\nangular.module('qrScanner', [\"ng\"]).directive('qrScanner', ['$interval', '$window', function($interval, $window) {\n  return {\n    restrict: 'E',\n    scope: {\n      ngSuccess: '&ngSuccess',\n      ngError: '&ngError',\n      ngVideoError: '&ngVideoError'\n    },\n    link: function(scope, element, attrs) {\n      window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n      var height = attrs.height || 300;\n      var width = attrs.width || 250;\n\n      var video = $window.document.createElement('video');\n      video.setAttribute('width', width);\n      video.setAttribute('height', height);\n      video.setAttribute('style', '-moz-transform:rotateY(-180deg);-webkit-transform:rotateY(-180deg);transform:rotateY(-180deg);');\n      var canvas = $window.document.createElement('canvas');\n      canvas.setAttribute('id', 'qr-canvas');\n      canvas.setAttribute('width', width);\n      canvas.setAttribute('height', height);\n      canvas.setAttribute('style', 'display:none;');\n\n      angular.element(element).append(video);\n      angular.element(element).append(canvas);\n      var context = canvas.getContext('2d');\n      var stopScan;\n\n      var scan = function() {\n        if (video.srcObject) {\n          context.drawImage(video, 0, 0, 307,250);\n          try {\n            qrcode.decode();\n          } catch(e) {\n            scope.ngError({error: e});\n          }\n        }\n      }\n\n      var successCallback = function(stream) {\n        video.srcObject = stream;\n        scope.video = video;\n        video.play()\n          .then(() => {\n            stopScan = $interval(scan, 500);\n          });\n      }\n\n      if (navigator.mediaDevices) {\n        navigator.mediaDevices.getUserMedia({video: { facingMode: {front: \"environment\"} }})\n          .then(successCallback)\n      } else {\n        scope.ngVideoError({error: 'Native web camera streaming (getUserMedia) not supported in this browser.'});\n      }\n\n      qrcode.callback = function(data) {\n        scope.ngSuccess({data: data});\n      };\n\n      element.bind('$destroy', function() {\n        if (video.srcObject) {\n          video.srcObject.getTracks().forEach(track => track.stop());\n        }\n        if (stopScan) {\n          $interval.cancel(stopScan);\n        }\n      });\n    }\n  }\n}]);\n})();\n","export * from './qr-scanner'\n","function ECB(count,dataCodewords){this.count=count,this.dataCodewords=dataCodewords,this.__defineGetter__(\"Count\",function(){return this.count}),this.__defineGetter__(\"DataCodewords\",function(){return this.dataCodewords})}function ECBlocks(ecCodewordsPerBlock,ecBlocks1,ecBlocks2){this.ecCodewordsPerBlock=ecCodewordsPerBlock,ecBlocks2?this.ecBlocks=new Array(ecBlocks1,ecBlocks2):this.ecBlocks=new Array(ecBlocks1),this.__defineGetter__(\"ECCodewordsPerBlock\",function(){return this.ecCodewordsPerBlock}),this.__defineGetter__(\"TotalECCodewords\",function(){return this.ecCodewordsPerBlock*this.NumBlocks}),this.__defineGetter__(\"NumBlocks\",function(){for(var total=0,i=0;i<this.ecBlocks.length;i++)total+=this.ecBlocks[i].length;return total}),this.getECBlocks=function(){return this.ecBlocks}}function Version(versionNumber,alignmentPatternCenters,ecBlocks1,ecBlocks2,ecBlocks3,ecBlocks4){this.versionNumber=versionNumber,this.alignmentPatternCenters=alignmentPatternCenters,this.ecBlocks=new Array(ecBlocks1,ecBlocks2,ecBlocks3,ecBlocks4);for(var total=0,ecCodewords=ecBlocks1.ECCodewordsPerBlock,ecbArray=ecBlocks1.getECBlocks(),i=0;i<ecbArray.length;i++){var ecBlock=ecbArray[i];total+=ecBlock.Count*(ecBlock.DataCodewords+ecCodewords)}this.totalCodewords=total,this.__defineGetter__(\"VersionNumber\",function(){return this.versionNumber}),this.__defineGetter__(\"AlignmentPatternCenters\",function(){return this.alignmentPatternCenters}),this.__defineGetter__(\"TotalCodewords\",function(){return this.totalCodewords}),this.__defineGetter__(\"DimensionForVersion\",function(){return 17+4*this.versionNumber}),this.buildFunctionPattern=function(){var dimension=this.DimensionForVersion,bitMatrix=new BitMatrix(dimension);bitMatrix.setRegion(0,0,9,9),bitMatrix.setRegion(dimension-8,0,8,9),bitMatrix.setRegion(0,dimension-8,9,8);for(var max=this.alignmentPatternCenters.length,x=0;max>x;x++)for(var i=this.alignmentPatternCenters[x]-2,y=0;max>y;y++)0==x&&(0==y||y==max-1)||x==max-1&&0==y||bitMatrix.setRegion(this.alignmentPatternCenters[y]-2,i,5,5);return bitMatrix.setRegion(6,9,1,dimension-17),bitMatrix.setRegion(9,6,dimension-17,1),this.versionNumber>6&&(bitMatrix.setRegion(dimension-11,0,3,6),bitMatrix.setRegion(0,dimension-11,6,3)),bitMatrix},this.getECBlocksForLevel=function(ecLevel){return this.ecBlocks[ecLevel.ordinal()]}}function buildVersions(){return new Array(new Version(1,new Array,new ECBlocks(7,new ECB(1,19)),new ECBlocks(10,new ECB(1,16)),new ECBlocks(13,new ECB(1,13)),new ECBlocks(17,new ECB(1,9))),new Version(2,new Array(6,18),new ECBlocks(10,new ECB(1,34)),new ECBlocks(16,new ECB(1,28)),new ECBlocks(22,new ECB(1,22)),new ECBlocks(28,new ECB(1,16))),new Version(3,new Array(6,22),new ECBlocks(15,new ECB(1,55)),new ECBlocks(26,new ECB(1,44)),new ECBlocks(18,new ECB(2,17)),new ECBlocks(22,new ECB(2,13))),new Version(4,new Array(6,26),new ECBlocks(20,new ECB(1,80)),new ECBlocks(18,new ECB(2,32)),new ECBlocks(26,new ECB(2,24)),new ECBlocks(16,new ECB(4,9))),new Version(5,new Array(6,30),new ECBlocks(26,new ECB(1,108)),new ECBlocks(24,new ECB(2,43)),new ECBlocks(18,new ECB(2,15),new ECB(2,16)),new ECBlocks(22,new ECB(2,11),new ECB(2,12))),new Version(6,new Array(6,34),new ECBlocks(18,new ECB(2,68)),new ECBlocks(16,new ECB(4,27)),new ECBlocks(24,new ECB(4,19)),new ECBlocks(28,new ECB(4,15))),new Version(7,new Array(6,22,38),new ECBlocks(20,new ECB(2,78)),new ECBlocks(18,new ECB(4,31)),new ECBlocks(18,new ECB(2,14),new ECB(4,15)),new ECBlocks(26,new ECB(4,13),new ECB(1,14))),new Version(8,new Array(6,24,42),new ECBlocks(24,new ECB(2,97)),new ECBlocks(22,new ECB(2,38),new ECB(2,39)),new ECBlocks(22,new ECB(4,18),new ECB(2,19)),new ECBlocks(26,new ECB(4,14),new ECB(2,15))),new Version(9,new Array(6,26,46),new ECBlocks(30,new ECB(2,116)),new ECBlocks(22,new ECB(3,36),new ECB(2,37)),new ECBlocks(20,new ECB(4,16),new ECB(4,17)),new ECBlocks(24,new ECB(4,12),new ECB(4,13))),new Version(10,new Array(6,28,50),new ECBlocks(18,new ECB(2,68),new ECB(2,69)),new ECBlocks(26,new ECB(4,43),new ECB(1,44)),new ECBlocks(24,new ECB(6,19),new ECB(2,20)),new ECBlocks(28,new ECB(6,15),new ECB(2,16))),new Version(11,new Array(6,30,54),new ECBlocks(20,new ECB(4,81)),new ECBlocks(30,new ECB(1,50),new ECB(4,51)),new ECBlocks(28,new ECB(4,22),new ECB(4,23)),new ECBlocks(24,new ECB(3,12),new ECB(8,13))),new Version(12,new Array(6,32,58),new ECBlocks(24,new ECB(2,92),new ECB(2,93)),new ECBlocks(22,new ECB(6,36),new ECB(2,37)),new ECBlocks(26,new ECB(4,20),new ECB(6,21)),new ECBlocks(28,new ECB(7,14),new ECB(4,15))),new Version(13,new Array(6,34,62),new ECBlocks(26,new ECB(4,107)),new ECBlocks(22,new ECB(8,37),new ECB(1,38)),new ECBlocks(24,new ECB(8,20),new ECB(4,21)),new ECBlocks(22,new ECB(12,11),new ECB(4,12))),new Version(14,new Array(6,26,46,66),new ECBlocks(30,new ECB(3,115),new ECB(1,116)),new ECBlocks(24,new ECB(4,40),new ECB(5,41)),new ECBlocks(20,new ECB(11,16),new ECB(5,17)),new ECBlocks(24,new ECB(11,12),new ECB(5,13))),new Version(15,new Array(6,26,48,70),new ECBlocks(22,new ECB(5,87),new ECB(1,88)),new ECBlocks(24,new ECB(5,41),new ECB(5,42)),new ECBlocks(30,new ECB(5,24),new ECB(7,25)),new ECBlocks(24,new ECB(11,12),new ECB(7,13))),new Version(16,new Array(6,26,50,74),new ECBlocks(24,new ECB(5,98),new ECB(1,99)),new ECBlocks(28,new ECB(7,45),new ECB(3,46)),new ECBlocks(24,new ECB(15,19),new ECB(2,20)),new ECBlocks(30,new ECB(3,15),new ECB(13,16))),new Version(17,new Array(6,30,54,78),new ECBlocks(28,new ECB(1,107),new ECB(5,108)),new ECBlocks(28,new ECB(10,46),new ECB(1,47)),new ECBlocks(28,new ECB(1,22),new ECB(15,23)),new ECBlocks(28,new ECB(2,14),new ECB(17,15))),new Version(18,new Array(6,30,56,82),new ECBlocks(30,new ECB(5,120),new ECB(1,121)),new ECBlocks(26,new ECB(9,43),new ECB(4,44)),new ECBlocks(28,new ECB(17,22),new ECB(1,23)),new ECBlocks(28,new ECB(2,14),new ECB(19,15))),new Version(19,new Array(6,30,58,86),new ECBlocks(28,new ECB(3,113),new ECB(4,114)),new ECBlocks(26,new ECB(3,44),new ECB(11,45)),new ECBlocks(26,new ECB(17,21),new ECB(4,22)),new ECBlocks(26,new ECB(9,13),new ECB(16,14))),new Version(20,new Array(6,34,62,90),new ECBlocks(28,new ECB(3,107),new ECB(5,108)),new ECBlocks(26,new ECB(3,41),new ECB(13,42)),new ECBlocks(30,new ECB(15,24),new ECB(5,25)),new ECBlocks(28,new ECB(15,15),new ECB(10,16))),new Version(21,new Array(6,28,50,72,94),new ECBlocks(28,new ECB(4,116),new ECB(4,117)),new ECBlocks(26,new ECB(17,42)),new ECBlocks(28,new ECB(17,22),new ECB(6,23)),new ECBlocks(30,new ECB(19,16),new ECB(6,17))),new Version(22,new Array(6,26,50,74,98),new ECBlocks(28,new ECB(2,111),new ECB(7,112)),new ECBlocks(28,new ECB(17,46)),new ECBlocks(30,new ECB(7,24),new ECB(16,25)),new ECBlocks(24,new ECB(34,13))),new Version(23,new Array(6,30,54,74,102),new ECBlocks(30,new ECB(4,121),new ECB(5,122)),new ECBlocks(28,new ECB(4,47),new ECB(14,48)),new ECBlocks(30,new ECB(11,24),new ECB(14,25)),new ECBlocks(30,new ECB(16,15),new ECB(14,16))),new Version(24,new Array(6,28,54,80,106),new ECBlocks(30,new ECB(6,117),new ECB(4,118)),new ECBlocks(28,new ECB(6,45),new ECB(14,46)),new ECBlocks(30,new ECB(11,24),new ECB(16,25)),new ECBlocks(30,new ECB(30,16),new ECB(2,17))),new Version(25,new Array(6,32,58,84,110),new ECBlocks(26,new ECB(8,106),new ECB(4,107)),new ECBlocks(28,new ECB(8,47),new ECB(13,48)),new ECBlocks(30,new ECB(7,24),new ECB(22,25)),new ECBlocks(30,new ECB(22,15),new ECB(13,16))),new Version(26,new Array(6,30,58,86,114),new ECBlocks(28,new ECB(10,114),new ECB(2,115)),new ECBlocks(28,new ECB(19,46),new ECB(4,47)),new ECBlocks(28,new ECB(28,22),new ECB(6,23)),new ECBlocks(30,new ECB(33,16),new ECB(4,17))),new Version(27,new Array(6,34,62,90,118),new ECBlocks(30,new ECB(8,122),new ECB(4,123)),new ECBlocks(28,new ECB(22,45),new ECB(3,46)),new ECBlocks(30,new ECB(8,23),new ECB(26,24)),new ECBlocks(30,new ECB(12,15),new ECB(28,16))),new Version(28,new Array(6,26,50,74,98,122),new ECBlocks(30,new ECB(3,117),new ECB(10,118)),new ECBlocks(28,new ECB(3,45),new ECB(23,46)),new ECBlocks(30,new ECB(4,24),new ECB(31,25)),new ECBlocks(30,new ECB(11,15),new ECB(31,16))),new Version(29,new Array(6,30,54,78,102,126),new ECBlocks(30,new ECB(7,116),new ECB(7,117)),new ECBlocks(28,new ECB(21,45),new ECB(7,46)),new ECBlocks(30,new ECB(1,23),new ECB(37,24)),new ECBlocks(30,new ECB(19,15),new ECB(26,16))),new Version(30,new Array(6,26,52,78,104,130),new ECBlocks(30,new ECB(5,115),new ECB(10,116)),new ECBlocks(28,new ECB(19,47),new ECB(10,48)),new ECBlocks(30,new ECB(15,24),new ECB(25,25)),new ECBlocks(30,new ECB(23,15),new ECB(25,16))),new Version(31,new Array(6,30,56,82,108,134),new ECBlocks(30,new ECB(13,115),new ECB(3,116)),new ECBlocks(28,new ECB(2,46),new ECB(29,47)),new ECBlocks(30,new ECB(42,24),new ECB(1,25)),new ECBlocks(30,new ECB(23,15),new ECB(28,16))),new Version(32,new Array(6,34,60,86,112,138),new ECBlocks(30,new ECB(17,115)),new ECBlocks(28,new ECB(10,46),new ECB(23,47)),new ECBlocks(30,new ECB(10,24),new ECB(35,25)),new ECBlocks(30,new ECB(19,15),new ECB(35,16))),new Version(33,new Array(6,30,58,86,114,142),new ECBlocks(30,new ECB(17,115),new ECB(1,116)),new ECBlocks(28,new ECB(14,46),new ECB(21,47)),new ECBlocks(30,new ECB(29,24),new ECB(19,25)),new ECBlocks(30,new ECB(11,15),new ECB(46,16))),new Version(34,new Array(6,34,62,90,118,146),new ECBlocks(30,new ECB(13,115),new ECB(6,116)),new ECBlocks(28,new ECB(14,46),new ECB(23,47)),new ECBlocks(30,new ECB(44,24),new ECB(7,25)),new ECBlocks(30,new ECB(59,16),new ECB(1,17))),new Version(35,new Array(6,30,54,78,102,126,150),new ECBlocks(30,new ECB(12,121),new ECB(7,122)),new ECBlocks(28,new ECB(12,47),new ECB(26,48)),new ECBlocks(30,new ECB(39,24),new ECB(14,25)),new ECBlocks(30,new ECB(22,15),new ECB(41,16))),new Version(36,new Array(6,24,50,76,102,128,154),new ECBlocks(30,new ECB(6,121),new ECB(14,122)),new ECBlocks(28,new ECB(6,47),new ECB(34,48)),new ECBlocks(30,new ECB(46,24),new ECB(10,25)),new ECBlocks(30,new ECB(2,15),new ECB(64,16))),new Version(37,new Array(6,28,54,80,106,132,158),new ECBlocks(30,new ECB(17,122),new ECB(4,123)),new ECBlocks(28,new ECB(29,46),new ECB(14,47)),new ECBlocks(30,new ECB(49,24),new ECB(10,25)),new ECBlocks(30,new ECB(24,15),new ECB(46,16))),new Version(38,new Array(6,32,58,84,110,136,162),new ECBlocks(30,new ECB(4,122),new ECB(18,123)),new ECBlocks(28,new ECB(13,46),new ECB(32,47)),new ECBlocks(30,new ECB(48,24),new ECB(14,25)),new ECBlocks(30,new ECB(42,15),new ECB(32,16))),new Version(39,new Array(6,26,54,82,110,138,166),new ECBlocks(30,new ECB(20,117),new ECB(4,118)),new ECBlocks(28,new ECB(40,47),new ECB(7,48)),new ECBlocks(30,new ECB(43,24),new ECB(22,25)),new ECBlocks(30,new ECB(10,15),new ECB(67,16))),new Version(40,new Array(6,30,58,86,114,142,170),new ECBlocks(30,new ECB(19,118),new ECB(6,119)),new ECBlocks(28,new ECB(18,47),new ECB(31,48)),new ECBlocks(30,new ECB(34,24),new ECB(34,25)),new ECBlocks(30,new ECB(20,15),new ECB(61,16))))}function PerspectiveTransform(a11,a21,a31,a12,a22,a32,a13,a23,a33){this.a11=a11,this.a12=a12,this.a13=a13,this.a21=a21,this.a22=a22,this.a23=a23,this.a31=a31,this.a32=a32,this.a33=a33,this.transformPoints1=function(points){for(var max=points.length,a11=this.a11,a12=this.a12,a13=this.a13,a21=this.a21,a22=this.a22,a23=this.a23,a31=this.a31,a32=this.a32,a33=this.a33,i=0;max>i;i+=2){var x=points[i],y=points[i+1],denominator=a13*x+a23*y+a33;points[i]=(a11*x+a21*y+a31)/denominator,points[i+1]=(a12*x+a22*y+a32)/denominator}},this.transformPoints2=function(xValues,yValues){for(var n=xValues.length,i=0;n>i;i++){var x=xValues[i],y=yValues[i],denominator=this.a13*x+this.a23*y+this.a33;xValues[i]=(this.a11*x+this.a21*y+this.a31)/denominator,yValues[i]=(this.a12*x+this.a22*y+this.a32)/denominator}},this.buildAdjoint=function(){return new PerspectiveTransform(this.a22*this.a33-this.a23*this.a32,this.a23*this.a31-this.a21*this.a33,this.a21*this.a32-this.a22*this.a31,this.a13*this.a32-this.a12*this.a33,this.a11*this.a33-this.a13*this.a31,this.a12*this.a31-this.a11*this.a32,this.a12*this.a23-this.a13*this.a22,this.a13*this.a21-this.a11*this.a23,this.a11*this.a22-this.a12*this.a21)},this.times=function(other){return new PerspectiveTransform(this.a11*other.a11+this.a21*other.a12+this.a31*other.a13,this.a11*other.a21+this.a21*other.a22+this.a31*other.a23,this.a11*other.a31+this.a21*other.a32+this.a31*other.a33,this.a12*other.a11+this.a22*other.a12+this.a32*other.a13,this.a12*other.a21+this.a22*other.a22+this.a32*other.a23,this.a12*other.a31+this.a22*other.a32+this.a32*other.a33,this.a13*other.a11+this.a23*other.a12+this.a33*other.a13,this.a13*other.a21+this.a23*other.a22+this.a33*other.a23,this.a13*other.a31+this.a23*other.a32+this.a33*other.a33)}}function DetectorResult(bits,points){this.bits=bits,this.points=points}function Detector(image){this.image=image,this.resultPointCallback=null,this.sizeOfBlackWhiteBlackRun=function(fromX,fromY,toX,toY){var steep=Math.abs(toY-fromY)>Math.abs(toX-fromX);if(steep){var temp=fromX;fromX=fromY,fromY=temp,temp=toX,toX=toY,toY=temp}for(var dx=Math.abs(toX-fromX),dy=Math.abs(toY-fromY),error=-dx>>1,ystep=toY>fromY?1:-1,xstep=toX>fromX?1:-1,state=0,x=fromX,y=fromY;x!=toX;x+=xstep){var realX=steep?y:x,realY=steep?x:y;if(1==state?this.image[realX+realY*qrcode.width]&&state++:this.image[realX+realY*qrcode.width]||state++,3==state){var diffX=x-fromX,diffY=y-fromY;return Math.sqrt(diffX*diffX+diffY*diffY)}if(error+=dy,error>0){if(y==toY)break;y+=ystep,error-=dx}}var diffX2=toX-fromX,diffY2=toY-fromY;return Math.sqrt(diffX2*diffX2+diffY2*diffY2)},this.sizeOfBlackWhiteBlackRunBothWays=function(fromX,fromY,toX,toY){var result=this.sizeOfBlackWhiteBlackRun(fromX,fromY,toX,toY),scale=1,otherToX=fromX-(toX-fromX);0>otherToX?(scale=fromX/(fromX-otherToX),otherToX=0):otherToX>=qrcode.width&&(scale=(qrcode.width-1-fromX)/(otherToX-fromX),otherToX=qrcode.width-1);var otherToY=Math.floor(fromY-(toY-fromY)*scale);return scale=1,0>otherToY?(scale=fromY/(fromY-otherToY),otherToY=0):otherToY>=qrcode.height&&(scale=(qrcode.height-1-fromY)/(otherToY-fromY),otherToY=qrcode.height-1),otherToX=Math.floor(fromX+(otherToX-fromX)*scale),result+=this.sizeOfBlackWhiteBlackRun(fromX,fromY,otherToX,otherToY),result-1},this.calculateModuleSizeOneWay=function(pattern,otherPattern){var moduleSizeEst1=this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(pattern.X),Math.floor(pattern.Y),Math.floor(otherPattern.X),Math.floor(otherPattern.Y)),moduleSizeEst2=this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(otherPattern.X),Math.floor(otherPattern.Y),Math.floor(pattern.X),Math.floor(pattern.Y));return isNaN(moduleSizeEst1)?moduleSizeEst2/7:isNaN(moduleSizeEst2)?moduleSizeEst1/7:(moduleSizeEst1+moduleSizeEst2)/14},this.calculateModuleSize=function(topLeft,topRight,bottomLeft){return(this.calculateModuleSizeOneWay(topLeft,topRight)+this.calculateModuleSizeOneWay(topLeft,bottomLeft))/2},this.distance=function(pattern1,pattern2){return xDiff=pattern1.X-pattern2.X,yDiff=pattern1.Y-pattern2.Y,Math.sqrt(xDiff*xDiff+yDiff*yDiff)},this.computeDimension=function(topLeft,topRight,bottomLeft,moduleSize){var tltrCentersDimension=Math.round(this.distance(topLeft,topRight)/moduleSize),tlblCentersDimension=Math.round(this.distance(topLeft,bottomLeft)/moduleSize),dimension=(tltrCentersDimension+tlblCentersDimension>>1)+7;switch(3&dimension){case 0:dimension++;break;case 2:dimension--;break;case 3:throw\"Error\"}return dimension},this.findAlignmentInRegion=function(overallEstModuleSize,estAlignmentX,estAlignmentY,allowanceFactor){var allowance=Math.floor(allowanceFactor*overallEstModuleSize),alignmentAreaLeftX=Math.max(0,estAlignmentX-allowance),alignmentAreaRightX=Math.min(qrcode.width-1,estAlignmentX+allowance);if(3*overallEstModuleSize>alignmentAreaRightX-alignmentAreaLeftX)throw\"Error\";var alignmentAreaTopY=Math.max(0,estAlignmentY-allowance),alignmentAreaBottomY=Math.min(qrcode.height-1,estAlignmentY+allowance),alignmentFinder=new AlignmentPatternFinder(this.image,alignmentAreaLeftX,alignmentAreaTopY,alignmentAreaRightX-alignmentAreaLeftX,alignmentAreaBottomY-alignmentAreaTopY,overallEstModuleSize,this.resultPointCallback);return alignmentFinder.find()},this.createTransform=function(topLeft,topRight,bottomLeft,alignmentPattern,dimension){var bottomRightX,bottomRightY,sourceBottomRightX,sourceBottomRightY,dimMinusThree=dimension-3.5;null!=alignmentPattern?(bottomRightX=alignmentPattern.X,bottomRightY=alignmentPattern.Y,sourceBottomRightX=sourceBottomRightY=dimMinusThree-3):(bottomRightX=topRight.X-topLeft.X+bottomLeft.X,bottomRightY=topRight.Y-topLeft.Y+bottomLeft.Y,sourceBottomRightX=sourceBottomRightY=dimMinusThree);var transform=PerspectiveTransform.quadrilateralToQuadrilateral(3.5,3.5,dimMinusThree,3.5,sourceBottomRightX,sourceBottomRightY,3.5,dimMinusThree,topLeft.X,topLeft.Y,topRight.X,topRight.Y,bottomRightX,bottomRightY,bottomLeft.X,bottomLeft.Y);return transform},this.sampleGrid=function(image,transform,dimension){var sampler=GridSampler;return sampler.sampleGrid3(image,dimension,transform)},this.processFinderPatternInfo=function(info){var topLeft=info.TopLeft,topRight=info.TopRight,bottomLeft=info.BottomLeft,moduleSize=this.calculateModuleSize(topLeft,topRight,bottomLeft);if(1>moduleSize)throw\"Error\";var dimension=this.computeDimension(topLeft,topRight,bottomLeft,moduleSize),provisionalVersion=Version.getProvisionalVersionForDimension(dimension),modulesBetweenFPCenters=provisionalVersion.DimensionForVersion-7,alignmentPattern=null;if(provisionalVersion.AlignmentPatternCenters.length>0)for(var bottomRightX=topRight.X-topLeft.X+bottomLeft.X,bottomRightY=topRight.Y-topLeft.Y+bottomLeft.Y,correctionToTopLeft=1-3/modulesBetweenFPCenters,estAlignmentX=Math.floor(topLeft.X+correctionToTopLeft*(bottomRightX-topLeft.X)),estAlignmentY=Math.floor(topLeft.Y+correctionToTopLeft*(bottomRightY-topLeft.Y)),i=4;16>=i;i<<=1){alignmentPattern=this.findAlignmentInRegion(moduleSize,estAlignmentX,estAlignmentY,i);break}var points,transform=this.createTransform(topLeft,topRight,bottomLeft,alignmentPattern,dimension),bits=this.sampleGrid(this.image,transform,dimension);return points=null==alignmentPattern?new Array(bottomLeft,topLeft,topRight):new Array(bottomLeft,topLeft,topRight,alignmentPattern),new DetectorResult(bits,points)},this.detect=function(){var info=(new FinderPatternFinder).findFinderPattern(this.image);return this.processFinderPatternInfo(info)}}function FormatInformation(formatInfo){this.errorCorrectionLevel=ErrorCorrectionLevel.forBits(formatInfo>>3&3),this.dataMask=7&formatInfo,this.__defineGetter__(\"ErrorCorrectionLevel\",function(){return this.errorCorrectionLevel}),this.__defineGetter__(\"DataMask\",function(){return this.dataMask}),this.GetHashCode=function(){return this.errorCorrectionLevel.ordinal()<<3|dataMask},this.Equals=function(o){var other=o;return this.errorCorrectionLevel==other.errorCorrectionLevel&&this.dataMask==other.dataMask}}function ErrorCorrectionLevel(ordinal,bits,name){this.ordinal_Renamed_Field=ordinal,this.bits=bits,this.name=name,this.__defineGetter__(\"Bits\",function(){return this.bits}),this.__defineGetter__(\"Name\",function(){return this.name}),this.ordinal=function(){return this.ordinal_Renamed_Field}}function BitMatrix(width,height){if(height||(height=width),1>width||1>height)throw\"Both dimensions must be greater than 0\";this.width=width,this.height=height;var rowSize=width>>5;0!=(31&width)&&rowSize++,this.rowSize=rowSize,this.bits=new Array(rowSize*height);for(var i=0;i<this.bits.length;i++)this.bits[i]=0;this.__defineGetter__(\"Width\",function(){return this.width}),this.__defineGetter__(\"Height\",function(){return this.height}),this.__defineGetter__(\"Dimension\",function(){if(this.width!=this.height)throw\"Can't call getDimension() on a non-square matrix\";return this.width}),this.get_Renamed=function(x,y){var offset=y*this.rowSize+(x>>5);return 0!=(1&URShift(this.bits[offset],31&x))},this.set_Renamed=function(x,y){var offset=y*this.rowSize+(x>>5);this.bits[offset]|=1<<(31&x)},this.flip=function(x,y){var offset=y*this.rowSize+(x>>5);this.bits[offset]^=1<<(31&x)},this.clear=function(){for(var max=this.bits.length,i=0;max>i;i++)this.bits[i]=0},this.setRegion=function(left,top,width,height){if(0>top||0>left)throw\"Left and top must be nonnegative\";if(1>height||1>width)throw\"Height and width must be at least 1\";var right=left+width,bottom=top+height;if(bottom>this.height||right>this.width)throw\"The region must fit inside the matrix\";for(var y=top;bottom>y;y++)for(var offset=y*this.rowSize,x=left;right>x;x++)this.bits[offset+(x>>5)]|=1<<(31&x)}}function DataBlock(numDataCodewords,codewords){this.numDataCodewords=numDataCodewords,this.codewords=codewords,this.__defineGetter__(\"NumDataCodewords\",function(){return this.numDataCodewords}),this.__defineGetter__(\"Codewords\",function(){return this.codewords})}function BitMatrixParser(bitMatrix){var dimension=bitMatrix.Dimension;if(21>dimension||1!=(3&dimension))throw\"Error BitMatrixParser\";this.bitMatrix=bitMatrix,this.parsedVersion=null,this.parsedFormatInfo=null,this.copyBit=function(i,j,versionBits){return this.bitMatrix.get_Renamed(i,j)?versionBits<<1|1:versionBits<<1},this.readFormatInformation=function(){if(null!=this.parsedFormatInfo)return this.parsedFormatInfo;for(var formatInfoBits=0,i=0;6>i;i++)formatInfoBits=this.copyBit(i,8,formatInfoBits);formatInfoBits=this.copyBit(7,8,formatInfoBits),formatInfoBits=this.copyBit(8,8,formatInfoBits),formatInfoBits=this.copyBit(8,7,formatInfoBits);for(var j=5;j>=0;j--)formatInfoBits=this.copyBit(8,j,formatInfoBits);if(this.parsedFormatInfo=FormatInformation.decodeFormatInformation(formatInfoBits),null!=this.parsedFormatInfo)return this.parsedFormatInfo;var dimension=this.bitMatrix.Dimension;formatInfoBits=0;for(var iMin=dimension-8,i=dimension-1;i>=iMin;i--)formatInfoBits=this.copyBit(i,8,formatInfoBits);for(var j=dimension-7;dimension>j;j++)formatInfoBits=this.copyBit(8,j,formatInfoBits);if(this.parsedFormatInfo=FormatInformation.decodeFormatInformation(formatInfoBits),null!=this.parsedFormatInfo)return this.parsedFormatInfo;throw\"Error readFormatInformation\"},this.readVersion=function(){if(null!=this.parsedVersion)return this.parsedVersion;var dimension=this.bitMatrix.Dimension,provisionalVersion=dimension-17>>2;if(6>=provisionalVersion)return Version.getVersionForNumber(provisionalVersion);for(var versionBits=0,ijMin=dimension-11,j=5;j>=0;j--)for(var i=dimension-9;i>=ijMin;i--)versionBits=this.copyBit(i,j,versionBits);if(this.parsedVersion=Version.decodeVersionInformation(versionBits),null!=this.parsedVersion&&this.parsedVersion.DimensionForVersion==dimension)return this.parsedVersion;versionBits=0;for(var i=5;i>=0;i--)for(var j=dimension-9;j>=ijMin;j--)versionBits=this.copyBit(i,j,versionBits);if(this.parsedVersion=Version.decodeVersionInformation(versionBits),null!=this.parsedVersion&&this.parsedVersion.DimensionForVersion==dimension)return this.parsedVersion;throw\"Error readVersion\"},this.readCodewords=function(){var formatInfo=this.readFormatInformation(),version=this.readVersion(),dataMask=DataMask.forReference(formatInfo.DataMask),dimension=this.bitMatrix.Dimension;dataMask.unmaskBitMatrix(this.bitMatrix,dimension);for(var functionPattern=version.buildFunctionPattern(),readingUp=!0,result=new Array(version.TotalCodewords),resultOffset=0,currentByte=0,bitsRead=0,j=dimension-1;j>0;j-=2){6==j&&j--;for(var count=0;dimension>count;count++)for(var i=readingUp?dimension-1-count:count,col=0;2>col;col++)functionPattern.get_Renamed(j-col,i)||(bitsRead++,currentByte<<=1,this.bitMatrix.get_Renamed(j-col,i)&&(currentByte|=1),8==bitsRead&&(result[resultOffset++]=currentByte,bitsRead=0,currentByte=0));readingUp^=!0}if(resultOffset!=version.TotalCodewords)throw\"Error readCodewords\";return result}}function DataMask000(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;dimension>i;i++)for(var j=0;dimension>j;j++)this.isMasked(i,j)&&bits.flip(j,i)},this.isMasked=function(i,j){return 0==(i+j&1)}}function DataMask001(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;dimension>i;i++)for(var j=0;dimension>j;j++)this.isMasked(i,j)&&bits.flip(j,i)},this.isMasked=function(i,j){return 0==(1&i)}}function DataMask010(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;dimension>i;i++)for(var j=0;dimension>j;j++)this.isMasked(i,j)&&bits.flip(j,i)},this.isMasked=function(i,j){return j%3==0}}function DataMask011(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;dimension>i;i++)for(var j=0;dimension>j;j++)this.isMasked(i,j)&&bits.flip(j,i)},this.isMasked=function(i,j){return(i+j)%3==0}}function DataMask100(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;dimension>i;i++)for(var j=0;dimension>j;j++)this.isMasked(i,j)&&bits.flip(j,i)},this.isMasked=function(i,j){return 0==(URShift(i,1)+j/3&1)}}function DataMask101(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;dimension>i;i++)for(var j=0;dimension>j;j++)this.isMasked(i,j)&&bits.flip(j,i)},this.isMasked=function(i,j){var temp=i*j;return(1&temp)+temp%3==0}}function DataMask110(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;dimension>i;i++)for(var j=0;dimension>j;j++)this.isMasked(i,j)&&bits.flip(j,i)},this.isMasked=function(i,j){var temp=i*j;return 0==((1&temp)+temp%3&1)}}function DataMask111(){this.unmaskBitMatrix=function(bits,dimension){for(var i=0;dimension>i;i++)for(var j=0;dimension>j;j++)this.isMasked(i,j)&&bits.flip(j,i)},this.isMasked=function(i,j){return 0==((i+j&1)+i*j%3&1)}}function ReedSolomonDecoder(field){this.field=field,this.decode=function(received,twoS){for(var poly=new GF256Poly(this.field,received),syndromeCoefficients=new Array(twoS),i=0;i<syndromeCoefficients.length;i++)syndromeCoefficients[i]=0;for(var dataMatrix=!1,noError=!0,i=0;twoS>i;i++){var eval=poly.evaluateAt(this.field.exp(dataMatrix?i+1:i));syndromeCoefficients[syndromeCoefficients.length-1-i]=eval,0!=eval&&(noError=!1)}if(!noError)for(var syndrome=new GF256Poly(this.field,syndromeCoefficients),sigmaOmega=this.runEuclideanAlgorithm(this.field.buildMonomial(twoS,1),syndrome,twoS),sigma=sigmaOmega[0],omega=sigmaOmega[1],errorLocations=this.findErrorLocations(sigma),errorMagnitudes=this.findErrorMagnitudes(omega,errorLocations,dataMatrix),i=0;i<errorLocations.length;i++){var position=received.length-1-this.field.log(errorLocations[i]);if(0>position)throw\"ReedSolomonException Bad error location\";received[position]=GF256.addOrSubtract(received[position],errorMagnitudes[i])}},this.runEuclideanAlgorithm=function(a,b,R){if(a.Degree<b.Degree){var temp=a;a=b,b=temp}for(var rLast=a,r=b,sLast=this.field.One,s=this.field.Zero,tLast=this.field.Zero,t=this.field.One;r.Degree>=Math.floor(R/2);){var rLastLast=rLast,sLastLast=sLast,tLastLast=tLast;if(rLast=r,sLast=s,tLast=t,rLast.Zero)throw\"r_{i-1} was zero\";r=rLastLast;for(var q=this.field.Zero,denominatorLeadingTerm=rLast.getCoefficient(rLast.Degree),dltInverse=this.field.inverse(denominatorLeadingTerm);r.Degree>=rLast.Degree&&!r.Zero;){var degreeDiff=r.Degree-rLast.Degree,scale=this.field.multiply(r.getCoefficient(r.Degree),dltInverse);q=q.addOrSubtract(this.field.buildMonomial(degreeDiff,scale)),r=r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff,scale))}s=q.multiply1(sLast).addOrSubtract(sLastLast),t=q.multiply1(tLast).addOrSubtract(tLastLast)}var sigmaTildeAtZero=t.getCoefficient(0);if(0==sigmaTildeAtZero)throw\"ReedSolomonException sigmaTilde(0) was zero\";var inverse=this.field.inverse(sigmaTildeAtZero),sigma=t.multiply2(inverse),omega=r.multiply2(inverse);return new Array(sigma,omega)},this.findErrorLocations=function(errorLocator){var numErrors=errorLocator.Degree;if(1==numErrors)return new Array(errorLocator.getCoefficient(1));for(var result=new Array(numErrors),e=0,i=1;256>i&&numErrors>e;i++)0==errorLocator.evaluateAt(i)&&(result[e]=this.field.inverse(i),e++);if(e!=numErrors)throw\"Error locator degree does not match number of roots\";return result},this.findErrorMagnitudes=function(errorEvaluator,errorLocations,dataMatrix){for(var s=errorLocations.length,result=new Array(s),i=0;s>i;i++){for(var xiInverse=this.field.inverse(errorLocations[i]),denominator=1,j=0;s>j;j++)i!=j&&(denominator=this.field.multiply(denominator,GF256.addOrSubtract(1,this.field.multiply(errorLocations[j],xiInverse))));result[i]=this.field.multiply(errorEvaluator.evaluateAt(xiInverse),this.field.inverse(denominator)),dataMatrix&&(result[i]=this.field.multiply(result[i],xiInverse))}return result}}function GF256Poly(field,coefficients){if(null==coefficients||0==coefficients.length)throw\"System.ArgumentException\";this.field=field;var coefficientsLength=coefficients.length;if(coefficientsLength>1&&0==coefficients[0]){for(var firstNonZero=1;coefficientsLength>firstNonZero&&0==coefficients[firstNonZero];)firstNonZero++;if(firstNonZero==coefficientsLength)this.coefficients=field.Zero.coefficients;else{this.coefficients=new Array(coefficientsLength-firstNonZero);for(var i=0;i<this.coefficients.length;i++)this.coefficients[i]=0;for(var ci=0;ci<this.coefficients.length;ci++)this.coefficients[ci]=coefficients[firstNonZero+ci]}}else this.coefficients=coefficients;this.__defineGetter__(\"Zero\",function(){return 0==this.coefficients[0]}),this.__defineGetter__(\"Degree\",function(){return this.coefficients.length-1}),this.__defineGetter__(\"Coefficients\",function(){return this.coefficients}),this.getCoefficient=function(degree){return this.coefficients[this.coefficients.length-1-degree]},this.evaluateAt=function(a){if(0==a)return this.getCoefficient(0);var size=this.coefficients.length;if(1==a){for(var result=0,i=0;size>i;i++)result=GF256.addOrSubtract(result,this.coefficients[i]);return result}for(var result2=this.coefficients[0],i=1;size>i;i++)result2=GF256.addOrSubtract(this.field.multiply(a,result2),this.coefficients[i]);return result2},this.addOrSubtract=function(other){if(this.field!=other.field)throw\"GF256Polys do not have same GF256 field\";if(this.Zero)return other;if(other.Zero)return this;var smallerCoefficients=this.coefficients,largerCoefficients=other.coefficients;if(smallerCoefficients.length>largerCoefficients.length){var temp=smallerCoefficients;smallerCoefficients=largerCoefficients,largerCoefficients=temp}for(var sumDiff=new Array(largerCoefficients.length),lengthDiff=largerCoefficients.length-smallerCoefficients.length,ci=0;lengthDiff>ci;ci++)sumDiff[ci]=largerCoefficients[ci];for(var i=lengthDiff;i<largerCoefficients.length;i++)sumDiff[i]=GF256.addOrSubtract(smallerCoefficients[i-lengthDiff],largerCoefficients[i]);return new GF256Poly(field,sumDiff)},this.multiply1=function(other){if(this.field!=other.field)throw\"GF256Polys do not have same GF256 field\";if(this.Zero||other.Zero)return this.field.Zero;for(var aCoefficients=this.coefficients,aLength=aCoefficients.length,bCoefficients=other.coefficients,bLength=bCoefficients.length,product=new Array(aLength+bLength-1),i=0;aLength>i;i++)for(var aCoeff=aCoefficients[i],j=0;bLength>j;j++)product[i+j]=GF256.addOrSubtract(product[i+j],this.field.multiply(aCoeff,bCoefficients[j]));return new GF256Poly(this.field,product)},this.multiply2=function(scalar){if(0==scalar)return this.field.Zero;if(1==scalar)return this;for(var size=this.coefficients.length,product=new Array(size),i=0;size>i;i++)product[i]=this.field.multiply(this.coefficients[i],scalar);return new GF256Poly(this.field,product)},this.multiplyByMonomial=function(degree,coefficient){if(0>degree)throw\"System.ArgumentException\";if(0==coefficient)return this.field.Zero;for(var size=this.coefficients.length,product=new Array(size+degree),i=0;i<product.length;i++)product[i]=0;for(var i=0;size>i;i++)product[i]=this.field.multiply(this.coefficients[i],coefficient);return new GF256Poly(this.field,product)},this.divide=function(other){if(this.field!=other.field)throw\"GF256Polys do not have same GF256 field\";if(other.Zero)throw\"Divide by 0\";for(var quotient=this.field.Zero,remainder=this,denominatorLeadingTerm=other.getCoefficient(other.Degree),inverseDenominatorLeadingTerm=this.field.inverse(denominatorLeadingTerm);remainder.Degree>=other.Degree&&!remainder.Zero;){\nvar degreeDifference=remainder.Degree-other.Degree,scale=this.field.multiply(remainder.getCoefficient(remainder.Degree),inverseDenominatorLeadingTerm),term=other.multiplyByMonomial(degreeDifference,scale),iterationQuotient=this.field.buildMonomial(degreeDifference,scale);quotient=quotient.addOrSubtract(iterationQuotient),remainder=remainder.addOrSubtract(term)}return new Array(quotient,remainder)}}function GF256(primitive){this.expTable=new Array(256),this.logTable=new Array(256);for(var x=1,i=0;256>i;i++)this.expTable[i]=x,x<<=1,x>=256&&(x^=primitive);for(var i=0;255>i;i++)this.logTable[this.expTable[i]]=i;var at0=new Array(1);at0[0]=0,this.zero=new GF256Poly(this,new Array(at0));var at1=new Array(1);at1[0]=1,this.one=new GF256Poly(this,new Array(at1)),this.__defineGetter__(\"Zero\",function(){return this.zero}),this.__defineGetter__(\"One\",function(){return this.one}),this.buildMonomial=function(degree,coefficient){if(0>degree)throw\"System.ArgumentException\";if(0==coefficient)return zero;for(var coefficients=new Array(degree+1),i=0;i<coefficients.length;i++)coefficients[i]=0;return coefficients[0]=coefficient,new GF256Poly(this,coefficients)},this.exp=function(a){return this.expTable[a]},this.log=function(a){if(0==a)throw\"System.ArgumentException\";return this.logTable[a]},this.inverse=function(a){if(0==a)throw\"System.ArithmeticException\";return this.expTable[255-this.logTable[a]]},this.multiply=function(a,b){return 0==a||0==b?0:1==a?b:1==b?a:this.expTable[(this.logTable[a]+this.logTable[b])%255]}}function URShift(number,bits){return number>=0?number>>bits:(number>>bits)+(2<<~bits)}function FinderPattern(posX,posY,estimatedModuleSize){this.x=posX,this.y=posY,this.count=1,this.estimatedModuleSize=estimatedModuleSize,this.__defineGetter__(\"EstimatedModuleSize\",function(){return this.estimatedModuleSize}),this.__defineGetter__(\"Count\",function(){return this.count}),this.__defineGetter__(\"X\",function(){return this.x}),this.__defineGetter__(\"Y\",function(){return this.y}),this.incrementCount=function(){this.count++},this.aboutEquals=function(moduleSize,i,j){if(Math.abs(i-this.y)<=moduleSize&&Math.abs(j-this.x)<=moduleSize){var moduleSizeDiff=Math.abs(moduleSize-this.estimatedModuleSize);return 1>=moduleSizeDiff||moduleSizeDiff/this.estimatedModuleSize<=1}return!1}}function FinderPatternInfo(patternCenters){this.bottomLeft=patternCenters[0],this.topLeft=patternCenters[1],this.topRight=patternCenters[2],this.__defineGetter__(\"BottomLeft\",function(){return this.bottomLeft}),this.__defineGetter__(\"TopLeft\",function(){return this.topLeft}),this.__defineGetter__(\"TopRight\",function(){return this.topRight})}function FinderPatternFinder(){this.image=null,this.possibleCenters=[],this.hasSkipped=!1,this.crossCheckStateCount=new Array(0,0,0,0,0),this.resultPointCallback=null,this.__defineGetter__(\"CrossCheckStateCount\",function(){return this.crossCheckStateCount[0]=0,this.crossCheckStateCount[1]=0,this.crossCheckStateCount[2]=0,this.crossCheckStateCount[3]=0,this.crossCheckStateCount[4]=0,this.crossCheckStateCount}),this.foundPatternCross=function(stateCount){for(var totalModuleSize=0,i=0;5>i;i++){var count=stateCount[i];if(0==count)return!1;totalModuleSize+=count}if(7>totalModuleSize)return!1;var moduleSize=Math.floor((totalModuleSize<<INTEGER_MATH_SHIFT)/7),maxVariance=Math.floor(moduleSize/2);return Math.abs(moduleSize-(stateCount[0]<<INTEGER_MATH_SHIFT))<maxVariance&&Math.abs(moduleSize-(stateCount[1]<<INTEGER_MATH_SHIFT))<maxVariance&&Math.abs(3*moduleSize-(stateCount[2]<<INTEGER_MATH_SHIFT))<3*maxVariance&&Math.abs(moduleSize-(stateCount[3]<<INTEGER_MATH_SHIFT))<maxVariance&&Math.abs(moduleSize-(stateCount[4]<<INTEGER_MATH_SHIFT))<maxVariance},this.centerFromEnd=function(stateCount,end){return end-stateCount[4]-stateCount[3]-stateCount[2]/2},this.crossCheckVertical=function(startI,centerJ,maxCount,originalStateCountTotal){for(var image=this.image,maxI=qrcode.height,stateCount=this.CrossCheckStateCount,i=startI;i>=0&&image[centerJ+i*qrcode.width];)stateCount[2]++,i--;if(0>i)return NaN;for(;i>=0&&!image[centerJ+i*qrcode.width]&&stateCount[1]<=maxCount;)stateCount[1]++,i--;if(0>i||stateCount[1]>maxCount)return NaN;for(;i>=0&&image[centerJ+i*qrcode.width]&&stateCount[0]<=maxCount;)stateCount[0]++,i--;if(stateCount[0]>maxCount)return NaN;for(i=startI+1;maxI>i&&image[centerJ+i*qrcode.width];)stateCount[2]++,i++;if(i==maxI)return NaN;for(;maxI>i&&!image[centerJ+i*qrcode.width]&&stateCount[3]<maxCount;)stateCount[3]++,i++;if(i==maxI||stateCount[3]>=maxCount)return NaN;for(;maxI>i&&image[centerJ+i*qrcode.width]&&stateCount[4]<maxCount;)stateCount[4]++,i++;if(stateCount[4]>=maxCount)return NaN;var stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+stateCount[4];return 5*Math.abs(stateCountTotal-originalStateCountTotal)>=2*originalStateCountTotal?NaN:this.foundPatternCross(stateCount)?this.centerFromEnd(stateCount,i):NaN},this.crossCheckHorizontal=function(startJ,centerI,maxCount,originalStateCountTotal){for(var image=this.image,maxJ=qrcode.width,stateCount=this.CrossCheckStateCount,j=startJ;j>=0&&image[j+centerI*qrcode.width];)stateCount[2]++,j--;if(0>j)return NaN;for(;j>=0&&!image[j+centerI*qrcode.width]&&stateCount[1]<=maxCount;)stateCount[1]++,j--;if(0>j||stateCount[1]>maxCount)return NaN;for(;j>=0&&image[j+centerI*qrcode.width]&&stateCount[0]<=maxCount;)stateCount[0]++,j--;if(stateCount[0]>maxCount)return NaN;for(j=startJ+1;maxJ>j&&image[j+centerI*qrcode.width];)stateCount[2]++,j++;if(j==maxJ)return NaN;for(;maxJ>j&&!image[j+centerI*qrcode.width]&&stateCount[3]<maxCount;)stateCount[3]++,j++;if(j==maxJ||stateCount[3]>=maxCount)return NaN;for(;maxJ>j&&image[j+centerI*qrcode.width]&&stateCount[4]<maxCount;)stateCount[4]++,j++;if(stateCount[4]>=maxCount)return NaN;var stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+stateCount[4];return 5*Math.abs(stateCountTotal-originalStateCountTotal)>=originalStateCountTotal?NaN:this.foundPatternCross(stateCount)?this.centerFromEnd(stateCount,j):NaN},this.handlePossibleCenter=function(stateCount,i,j){var stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+stateCount[4],centerJ=this.centerFromEnd(stateCount,j),centerI=this.crossCheckVertical(i,Math.floor(centerJ),stateCount[2],stateCountTotal);if(!isNaN(centerI)&&(centerJ=this.crossCheckHorizontal(Math.floor(centerJ),Math.floor(centerI),stateCount[2],stateCountTotal),!isNaN(centerJ))){for(var estimatedModuleSize=stateCountTotal/7,found=!1,max=this.possibleCenters.length,index=0;max>index;index++){var center=this.possibleCenters[index];if(center.aboutEquals(estimatedModuleSize,centerI,centerJ)){center.incrementCount(),found=!0;break}}if(!found){var point=new FinderPattern(centerJ,centerI,estimatedModuleSize);this.possibleCenters.push(point),null!=this.resultPointCallback&&this.resultPointCallback.foundPossibleResultPoint(point)}return!0}return!1},this.selectBestPatterns=function(){var startSize=this.possibleCenters.length;if(3>startSize)throw\"Couldn't find enough finder patterns\";if(startSize>3){for(var totalModuleSize=0,square=0,i=0;startSize>i;i++){var centerValue=this.possibleCenters[i].EstimatedModuleSize;totalModuleSize+=centerValue,square+=centerValue*centerValue}var average=totalModuleSize/startSize;this.possibleCenters.sort(function(center1,center2){var dA=Math.abs(center2.EstimatedModuleSize-average),dB=Math.abs(center1.EstimatedModuleSize-average);return dB>dA?-1:dA==dB?0:1});for(var stdDev=Math.sqrt(square/startSize-average*average),limit=Math.max(.2*average,stdDev),i=0;i<this.possibleCenters.length&&this.possibleCenters.length>3;i++){var pattern=this.possibleCenters[i];Math.abs(pattern.EstimatedModuleSize-average)>limit&&(this.possibleCenters.remove(i),i--)}}return this.possibleCenters.length>3&&this.possibleCenters.sort(function(a,b){return a.count>b.count?-1:a.count<b.count?1:0}),new Array(this.possibleCenters[0],this.possibleCenters[1],this.possibleCenters[2])},this.findRowSkip=function(){var max=this.possibleCenters.length;if(1>=max)return 0;for(var firstConfirmedCenter=null,i=0;max>i;i++){var center=this.possibleCenters[i];if(center.Count>=CENTER_QUORUM){if(null!=firstConfirmedCenter)return this.hasSkipped=!0,Math.floor((Math.abs(firstConfirmedCenter.X-center.X)-Math.abs(firstConfirmedCenter.Y-center.Y))/2);firstConfirmedCenter=center}}return 0},this.haveMultiplyConfirmedCenters=function(){for(var confirmedCount=0,totalModuleSize=0,max=this.possibleCenters.length,i=0;max>i;i++){var pattern=this.possibleCenters[i];pattern.Count>=CENTER_QUORUM&&(confirmedCount++,totalModuleSize+=pattern.EstimatedModuleSize)}if(3>confirmedCount)return!1;for(var average=totalModuleSize/max,totalDeviation=0,i=0;max>i;i++)pattern=this.possibleCenters[i],totalDeviation+=Math.abs(pattern.EstimatedModuleSize-average);return.05*totalModuleSize>=totalDeviation},this.findFinderPattern=function(image){var tryHarder=!1;this.image=image;var maxI=qrcode.height,maxJ=qrcode.width,iSkip=Math.floor(3*maxI/(4*MAX_MODULES));(MIN_SKIP>iSkip||tryHarder)&&(iSkip=MIN_SKIP);for(var done=!1,stateCount=new Array(5),i=iSkip-1;maxI>i&&!done;i+=iSkip){stateCount[0]=0,stateCount[1]=0,stateCount[2]=0,stateCount[3]=0,stateCount[4]=0;for(var currentState=0,j=0;maxJ>j;j++)if(image[j+i*qrcode.width])1==(1&currentState)&&currentState++,stateCount[currentState]++;else if(0==(1&currentState))if(4==currentState)if(this.foundPatternCross(stateCount)){var confirmed=this.handlePossibleCenter(stateCount,i,j);if(confirmed)if(iSkip=2,this.hasSkipped)done=this.haveMultiplyConfirmedCenters();else{var rowSkip=this.findRowSkip();rowSkip>stateCount[2]&&(i+=rowSkip-stateCount[2]-iSkip,j=maxJ-1)}else{do j++;while(maxJ>j&&!image[j+i*qrcode.width]);j--}currentState=0,stateCount[0]=0,stateCount[1]=0,stateCount[2]=0,stateCount[3]=0,stateCount[4]=0}else stateCount[0]=stateCount[2],stateCount[1]=stateCount[3],stateCount[2]=stateCount[4],stateCount[3]=1,stateCount[4]=0,currentState=3;else stateCount[++currentState]++;else stateCount[currentState]++;if(this.foundPatternCross(stateCount)){var confirmed=this.handlePossibleCenter(stateCount,i,maxJ);confirmed&&(iSkip=stateCount[0],this.hasSkipped&&(done=haveMultiplyConfirmedCenters()))}}var patternInfo=this.selectBestPatterns();return qrcode.orderBestPatterns(patternInfo),new FinderPatternInfo(patternInfo)}}function AlignmentPattern(posX,posY,estimatedModuleSize){this.x=posX,this.y=posY,this.count=1,this.estimatedModuleSize=estimatedModuleSize,this.__defineGetter__(\"EstimatedModuleSize\",function(){return this.estimatedModuleSize}),this.__defineGetter__(\"Count\",function(){return this.count}),this.__defineGetter__(\"X\",function(){return Math.floor(this.x)}),this.__defineGetter__(\"Y\",function(){return Math.floor(this.y)}),this.incrementCount=function(){this.count++},this.aboutEquals=function(moduleSize,i,j){if(Math.abs(i-this.y)<=moduleSize&&Math.abs(j-this.x)<=moduleSize){var moduleSizeDiff=Math.abs(moduleSize-this.estimatedModuleSize);return 1>=moduleSizeDiff||moduleSizeDiff/this.estimatedModuleSize<=1}return!1}}function AlignmentPatternFinder(image,startX,startY,width,height,moduleSize,resultPointCallback){this.image=image,this.possibleCenters=new Array,this.startX=startX,this.startY=startY,this.width=width,this.height=height,this.moduleSize=moduleSize,this.crossCheckStateCount=new Array(0,0,0),this.resultPointCallback=resultPointCallback,this.centerFromEnd=function(stateCount,end){return end-stateCount[2]-stateCount[1]/2},this.foundPatternCross=function(stateCount){for(var moduleSize=this.moduleSize,maxVariance=moduleSize/2,i=0;3>i;i++)if(Math.abs(moduleSize-stateCount[i])>=maxVariance)return!1;return!0},this.crossCheckVertical=function(startI,centerJ,maxCount,originalStateCountTotal){var image=this.image,maxI=qrcode.height,stateCount=this.crossCheckStateCount;stateCount[0]=0,stateCount[1]=0,stateCount[2]=0;for(var i=startI;i>=0&&image[centerJ+i*qrcode.width]&&stateCount[1]<=maxCount;)stateCount[1]++,i--;if(0>i||stateCount[1]>maxCount)return NaN;for(;i>=0&&!image[centerJ+i*qrcode.width]&&stateCount[0]<=maxCount;)stateCount[0]++,i--;if(stateCount[0]>maxCount)return NaN;for(i=startI+1;maxI>i&&image[centerJ+i*qrcode.width]&&stateCount[1]<=maxCount;)stateCount[1]++,i++;if(i==maxI||stateCount[1]>maxCount)return NaN;for(;maxI>i&&!image[centerJ+i*qrcode.width]&&stateCount[2]<=maxCount;)stateCount[2]++,i++;if(stateCount[2]>maxCount)return NaN;var stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2];return 5*Math.abs(stateCountTotal-originalStateCountTotal)>=2*originalStateCountTotal?NaN:this.foundPatternCross(stateCount)?this.centerFromEnd(stateCount,i):NaN},this.handlePossibleCenter=function(stateCount,i,j){var stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2],centerJ=this.centerFromEnd(stateCount,j),centerI=this.crossCheckVertical(i,Math.floor(centerJ),2*stateCount[1],stateCountTotal);if(!isNaN(centerI)){for(var estimatedModuleSize=(stateCount[0]+stateCount[1]+stateCount[2])/3,max=this.possibleCenters.length,index=0;max>index;index++){var center=this.possibleCenters[index];if(center.aboutEquals(estimatedModuleSize,centerI,centerJ))return new AlignmentPattern(centerJ,centerI,estimatedModuleSize)}var point=new AlignmentPattern(centerJ,centerI,estimatedModuleSize);this.possibleCenters.push(point),null!=this.resultPointCallback&&this.resultPointCallback.foundPossibleResultPoint(point)}return null},this.find=function(){for(var startX=this.startX,height=this.height,maxJ=startX+width,middleI=startY+(height>>1),stateCount=new Array(0,0,0),iGen=0;height>iGen;iGen++){var i=middleI+(0==(1&iGen)?iGen+1>>1:-(iGen+1>>1));stateCount[0]=0,stateCount[1]=0,stateCount[2]=0;for(var j=startX;maxJ>j&&!image[j+qrcode.width*i];)j++;for(var currentState=0;maxJ>j;){if(image[j+i*qrcode.width])if(1==currentState)stateCount[currentState]++;else if(2==currentState){if(this.foundPatternCross(stateCount)){var confirmed=this.handlePossibleCenter(stateCount,i,j);if(null!=confirmed)return confirmed}stateCount[0]=stateCount[2],stateCount[1]=1,stateCount[2]=0,currentState=1}else stateCount[++currentState]++;else 1==currentState&&currentState++,stateCount[currentState]++;j++}if(this.foundPatternCross(stateCount)){var confirmed=this.handlePossibleCenter(stateCount,i,maxJ);if(null!=confirmed)return confirmed}}if(0!=this.possibleCenters.length)return this.possibleCenters[0];throw\"Couldn't find enough alignment patterns\"}}function QRCodeDataBlockReader(blocks,version,numErrorCorrectionCode){this.blockPointer=0,this.bitPointer=7,this.dataLength=0,this.blocks=blocks,this.numErrorCorrectionCode=numErrorCorrectionCode,9>=version?this.dataLengthMode=0:version>=10&&26>=version?this.dataLengthMode=1:version>=27&&40>=version&&(this.dataLengthMode=2),this.getNextBits=function(numBits){var bits=0;if(numBits<this.bitPointer+1){for(var mask=0,i=0;numBits>i;i++)mask+=1<<i;return mask<<=this.bitPointer-numBits+1,bits=(this.blocks[this.blockPointer]&mask)>>this.bitPointer-numBits+1,this.bitPointer-=numBits,bits}if(numBits<this.bitPointer+1+8){for(var mask1=0,i=0;i<this.bitPointer+1;i++)mask1+=1<<i;return bits=(this.blocks[this.blockPointer]&mask1)<<numBits-(this.bitPointer+1),this.blockPointer++,bits+=this.blocks[this.blockPointer]>>8-(numBits-(this.bitPointer+1)),this.bitPointer=this.bitPointer-numBits%8,this.bitPointer<0&&(this.bitPointer=8+this.bitPointer),bits}if(numBits<this.bitPointer+1+16){for(var mask1=0,mask3=0,i=0;i<this.bitPointer+1;i++)mask1+=1<<i;var bitsFirstBlock=(this.blocks[this.blockPointer]&mask1)<<numBits-(this.bitPointer+1);this.blockPointer++;var bitsSecondBlock=this.blocks[this.blockPointer]<<numBits-(this.bitPointer+1+8);this.blockPointer++;for(var i=0;i<numBits-(this.bitPointer+1+8);i++)mask3+=1<<i;mask3<<=8-(numBits-(this.bitPointer+1+8));var bitsThirdBlock=(this.blocks[this.blockPointer]&mask3)>>8-(numBits-(this.bitPointer+1+8));return bits=bitsFirstBlock+bitsSecondBlock+bitsThirdBlock,this.bitPointer=this.bitPointer-(numBits-8)%8,this.bitPointer<0&&(this.bitPointer=8+this.bitPointer),bits}return 0},this.NextMode=function(){return this.blockPointer>this.blocks.length-this.numErrorCorrectionCode-2?0:this.getNextBits(4)},this.getDataLength=function(modeIndicator){for(var index=0;;){if(modeIndicator>>index==1)break;index++}return this.getNextBits(qrcode.sizeOfDataLengthInfo[this.dataLengthMode][index])},this.getRomanAndFigureString=function(dataLength){var length=dataLength,intData=0,strData=\"\",tableRomanAndFigure=new Array(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\" \",\"$\",\"%\",\"*\",\"+\",\"-\",\".\",\"/\",\":\");do if(length>1){intData=this.getNextBits(11);var firstLetter=Math.floor(intData/45),secondLetter=intData%45;strData+=tableRomanAndFigure[firstLetter],strData+=tableRomanAndFigure[secondLetter],length-=2}else 1==length&&(intData=this.getNextBits(6),strData+=tableRomanAndFigure[intData],length-=1);while(length>0);return strData},this.getFigureString=function(dataLength){var length=dataLength,intData=0,strData=\"\";do length>=3?(intData=this.getNextBits(10),100>intData&&(strData+=\"0\"),10>intData&&(strData+=\"0\"),length-=3):2==length?(intData=this.getNextBits(7),10>intData&&(strData+=\"0\"),length-=2):1==length&&(intData=this.getNextBits(4),length-=1),strData+=intData;while(length>0);return strData},this.get8bitByteArray=function(dataLength){var length=dataLength,intData=0,output=new Array;do intData=this.getNextBits(8),output.push(intData),length--;while(length>0);return output},this.getKanjiString=function(dataLength){var length=dataLength,intData=0,unicodeString=\"\";do{intData=getNextBits(13);var lowerByte=intData%192,higherByte=intData/192,tempWord=(higherByte<<8)+lowerByte,shiftjisWord=0;shiftjisWord=40956>=tempWord+33088?tempWord+33088:tempWord+49472,unicodeString+=String.fromCharCode(shiftjisWord),length--}while(length>0);return unicodeString},this.__defineGetter__(\"DataByte\",function(){for(var output=new Array,MODE_NUMBER=1,MODE_ROMAN_AND_NUMBER=2,MODE_8BIT_BYTE=4,MODE_KANJI=8;;){var mode=this.NextMode();if(0==mode){if(output.length>0)break;throw\"Empty data block\"}if(mode!=MODE_NUMBER&&mode!=MODE_ROMAN_AND_NUMBER&&mode!=MODE_8BIT_BYTE&&mode!=MODE_KANJI)throw\"Invalid mode: \"+mode+\" in (block:\"+this.blockPointer+\" bit:\"+this.bitPointer+\")\";if(dataLength=this.getDataLength(mode),dataLength<1)throw\"Invalid data length: \"+dataLength;switch(mode){case MODE_NUMBER:for(var temp_str=this.getFigureString(dataLength),ta=new Array(temp_str.length),j=0;j<temp_str.length;j++)ta[j]=temp_str.charCodeAt(j);output.push(ta);break;case MODE_ROMAN_AND_NUMBER:for(var temp_str=this.getRomanAndFigureString(dataLength),ta=new Array(temp_str.length),j=0;j<temp_str.length;j++)ta[j]=temp_str.charCodeAt(j);output.push(ta);break;case MODE_8BIT_BYTE:var temp_sbyteArray3=this.get8bitByteArray(dataLength);output.push(temp_sbyteArray3);break;case MODE_KANJI:var temp_str=this.getKanjiString(dataLength);output.push(temp_str)}}return output})}GridSampler={},GridSampler.checkAndNudgePoints=function(image,points){for(var width=qrcode.width,height=qrcode.height,nudged=!0,offset=0;offset<points.length&&nudged;offset+=2){var x=Math.floor(points[offset]),y=Math.floor(points[offset+1]);if(-1>x||x>width||-1>y||y>height)throw\"Error.checkAndNudgePoints \";nudged=!1,-1==x?(points[offset]=0,nudged=!0):x==width&&(points[offset]=width-1,nudged=!0),-1==y?(points[offset+1]=0,nudged=!0):y==height&&(points[offset+1]=height-1,nudged=!0)}nudged=!0;for(var offset=points.length-2;offset>=0&&nudged;offset-=2){var x=Math.floor(points[offset]),y=Math.floor(points[offset+1]);if(-1>x||x>width||-1>y||y>height)throw\"Error.checkAndNudgePoints \";nudged=!1,-1==x?(points[offset]=0,nudged=!0):x==width&&(points[offset]=width-1,nudged=!0),-1==y?(points[offset+1]=0,nudged=!0):y==height&&(points[offset+1]=height-1,nudged=!0)}},GridSampler.sampleGrid3=function(image,dimension,transform){for(var bits=new BitMatrix(dimension),points=new Array(dimension<<1),y=0;dimension>y;y++){for(var max=points.length,iValue=y+.5,x=0;max>x;x+=2)points[x]=(x>>1)+.5,points[x+1]=iValue;transform.transformPoints1(points),GridSampler.checkAndNudgePoints(image,points);try{for(var x=0;max>x;x+=2){var xpoint=4*Math.floor(points[x])+Math.floor(points[x+1])*qrcode.width*4,bit=image[Math.floor(points[x])+qrcode.width*Math.floor(points[x+1])];qrcode.imagedata.data[xpoint]=bit?255:0,qrcode.imagedata.data[xpoint+1]=bit?255:0,qrcode.imagedata.data[xpoint+2]=0,qrcode.imagedata.data[xpoint+3]=255,bit&&bits.set_Renamed(x>>1,y)}}catch(aioobe){throw\"Error.checkAndNudgePoints\"}}return bits},GridSampler.sampleGridx=function(image,dimension,p1ToX,p1ToY,p2ToX,p2ToY,p3ToX,p3ToY,p4ToX,p4ToY,p1FromX,p1FromY,p2FromX,p2FromY,p3FromX,p3FromY,p4FromX,p4FromY){var transform=PerspectiveTransform.quadrilateralToQuadrilateral(p1ToX,p1ToY,p2ToX,p2ToY,p3ToX,p3ToY,p4ToX,p4ToY,p1FromX,p1FromY,p2FromX,p2FromY,p3FromX,p3FromY,p4FromX,p4FromY);return GridSampler.sampleGrid3(image,dimension,transform)},Version.VERSION_DECODE_INFO=new Array(31892,34236,39577,42195,48118,51042,55367,58893,63784,68472,70749,76311,79154,84390,87683,92361,96236,102084,102881,110507,110734,117786,119615,126325,127568,133589,136944,141498,145311,150283,152622,158308,161089,167017),Version.VERSIONS=buildVersions(),Version.getVersionForNumber=function(versionNumber){if(1>versionNumber||versionNumber>40)throw\"ArgumentException\";return Version.VERSIONS[versionNumber-1]},Version.getProvisionalVersionForDimension=function(dimension){if(dimension%4!=1)throw\"Error getProvisionalVersionForDimension\";try{return Version.getVersionForNumber(dimension-17>>2)}catch(iae){throw\"Error getVersionForNumber\"}},Version.decodeVersionInformation=function(versionBits){for(var bestDifference=4294967295,bestVersion=0,i=0;i<Version.VERSION_DECODE_INFO.length;i++){var targetVersion=Version.VERSION_DECODE_INFO[i];if(targetVersion==versionBits)return this.getVersionForNumber(i+7);var bitsDifference=FormatInformation.numBitsDiffering(versionBits,targetVersion);bestDifference>bitsDifference&&(bestVersion=i+7,bestDifference=bitsDifference)}return 3>=bestDifference?this.getVersionForNumber(bestVersion):null},PerspectiveTransform.quadrilateralToQuadrilateral=function(x0,y0,x1,y1,x2,y2,x3,y3,x0p,y0p,x1p,y1p,x2p,y2p,x3p,y3p){var qToS=this.quadrilateralToSquare(x0,y0,x1,y1,x2,y2,x3,y3),sToQ=this.squareToQuadrilateral(x0p,y0p,x1p,y1p,x2p,y2p,x3p,y3p);return sToQ.times(qToS)},PerspectiveTransform.squareToQuadrilateral=function(x0,y0,x1,y1,x2,y2,x3,y3){return dy2=y3-y2,dy3=y0-y1+y2-y3,0==dy2&&0==dy3?new PerspectiveTransform(x1-x0,x2-x1,x0,y1-y0,y2-y1,y0,0,0,1):(dx1=x1-x2,dx2=x3-x2,dx3=x0-x1+x2-x3,dy1=y1-y2,denominator=dx1*dy2-dx2*dy1,a13=(dx3*dy2-dx2*dy3)/denominator,a23=(dx1*dy3-dx3*dy1)/denominator,new PerspectiveTransform(x1-x0+a13*x1,x3-x0+a23*x3,x0,y1-y0+a13*y1,y3-y0+a23*y3,y0,a13,a23,1))},PerspectiveTransform.quadrilateralToSquare=function(x0,y0,x1,y1,x2,y2,x3,y3){return this.squareToQuadrilateral(x0,y0,x1,y1,x2,y2,x3,y3).buildAdjoint()};var FORMAT_INFO_MASK_QR=21522,FORMAT_INFO_DECODE_LOOKUP=new Array(new Array(21522,0),new Array(20773,1),new Array(24188,2),new Array(23371,3),new Array(17913,4),new Array(16590,5),new Array(20375,6),new Array(19104,7),new Array(30660,8),new Array(29427,9),new Array(32170,10),new Array(30877,11),new Array(26159,12),new Array(25368,13),new Array(27713,14),new Array(26998,15),new Array(5769,16),new Array(5054,17),new Array(7399,18),new Array(6608,19),new Array(1890,20),new Array(597,21),new Array(3340,22),new Array(2107,23),new Array(13663,24),new Array(12392,25),new Array(16177,26),new Array(14854,27),new Array(9396,28),new Array(8579,29),new Array(11994,30),new Array(11245,31)),BITS_SET_IN_HALF_BYTE=new Array(0,1,1,2,1,2,2,3,1,2,2,3,2,3,3,4);FormatInformation.numBitsDiffering=function(a,b){return a^=b,BITS_SET_IN_HALF_BYTE[15&a]+BITS_SET_IN_HALF_BYTE[15&URShift(a,4)]+BITS_SET_IN_HALF_BYTE[15&URShift(a,8)]+BITS_SET_IN_HALF_BYTE[15&URShift(a,12)]+BITS_SET_IN_HALF_BYTE[15&URShift(a,16)]+BITS_SET_IN_HALF_BYTE[15&URShift(a,20)]+BITS_SET_IN_HALF_BYTE[15&URShift(a,24)]+BITS_SET_IN_HALF_BYTE[15&URShift(a,28)]},FormatInformation.decodeFormatInformation=function(maskedFormatInfo){var formatInfo=FormatInformation.doDecodeFormatInformation(maskedFormatInfo);return null!=formatInfo?formatInfo:FormatInformation.doDecodeFormatInformation(maskedFormatInfo^FORMAT_INFO_MASK_QR)},FormatInformation.doDecodeFormatInformation=function(maskedFormatInfo){for(var bestDifference=4294967295,bestFormatInfo=0,i=0;i<FORMAT_INFO_DECODE_LOOKUP.length;i++){var decodeInfo=FORMAT_INFO_DECODE_LOOKUP[i],targetInfo=decodeInfo[0];if(targetInfo==maskedFormatInfo)return new FormatInformation(decodeInfo[1]);var bitsDifference=this.numBitsDiffering(maskedFormatInfo,targetInfo);bestDifference>bitsDifference&&(bestFormatInfo=decodeInfo[1],bestDifference=bitsDifference)}return 3>=bestDifference?new FormatInformation(bestFormatInfo):null},ErrorCorrectionLevel.forBits=function(bits){if(0>bits||bits>=FOR_BITS.length)throw\"ArgumentException\";return FOR_BITS[bits]};var L=new ErrorCorrectionLevel(0,1,\"L\"),M=new ErrorCorrectionLevel(1,0,\"M\"),Q=new ErrorCorrectionLevel(2,3,\"Q\"),H=new ErrorCorrectionLevel(3,2,\"H\"),FOR_BITS=new Array(M,L,H,Q);DataBlock.getDataBlocks=function(rawCodewords,version,ecLevel){if(rawCodewords.length!=version.TotalCodewords)throw\"ArgumentException\";for(var ecBlocks=version.getECBlocksForLevel(ecLevel),totalBlocks=0,ecBlockArray=ecBlocks.getECBlocks(),i=0;i<ecBlockArray.length;i++)totalBlocks+=ecBlockArray[i].Count;for(var result=new Array(totalBlocks),numResultBlocks=0,j=0;j<ecBlockArray.length;j++)for(var ecBlock=ecBlockArray[j],i=0;i<ecBlock.Count;i++){var numDataCodewords=ecBlock.DataCodewords,numBlockCodewords=ecBlocks.ECCodewordsPerBlock+numDataCodewords;result[numResultBlocks++]=new DataBlock(numDataCodewords,new Array(numBlockCodewords))}for(var shorterBlocksTotalCodewords=result[0].codewords.length,longerBlocksStartAt=result.length-1;longerBlocksStartAt>=0;){var numCodewords=result[longerBlocksStartAt].codewords.length;if(numCodewords==shorterBlocksTotalCodewords)break;longerBlocksStartAt--}longerBlocksStartAt++;for(var shorterBlocksNumDataCodewords=shorterBlocksTotalCodewords-ecBlocks.ECCodewordsPerBlock,rawCodewordsOffset=0,i=0;shorterBlocksNumDataCodewords>i;i++)for(var j=0;numResultBlocks>j;j++)result[j].codewords[i]=rawCodewords[rawCodewordsOffset++];for(var j=longerBlocksStartAt;numResultBlocks>j;j++)result[j].codewords[shorterBlocksNumDataCodewords]=rawCodewords[rawCodewordsOffset++];for(var max=result[0].codewords.length,i=shorterBlocksNumDataCodewords;max>i;i++)for(var j=0;numResultBlocks>j;j++){var iOffset=longerBlocksStartAt>j?i:i+1;result[j].codewords[iOffset]=rawCodewords[rawCodewordsOffset++]}return result},DataMask={},DataMask.forReference=function(reference){if(0>reference||reference>7)throw\"System.ArgumentException\";return DataMask.DATA_MASKS[reference]},DataMask.DATA_MASKS=new Array(new DataMask000,new DataMask001,new DataMask010,new DataMask011,new DataMask100,new DataMask101,new DataMask110,new DataMask111),GF256.QR_CODE_FIELD=new GF256(285),GF256.DATA_MATRIX_FIELD=new GF256(301),GF256.addOrSubtract=function(a,b){return a^b},Decoder={},Decoder.rsDecoder=new ReedSolomonDecoder(GF256.QR_CODE_FIELD),Decoder.correctErrors=function(codewordBytes,numDataCodewords){for(var numCodewords=codewordBytes.length,codewordsInts=new Array(numCodewords),i=0;numCodewords>i;i++)codewordsInts[i]=255&codewordBytes[i];var numECCodewords=codewordBytes.length-numDataCodewords;try{Decoder.rsDecoder.decode(codewordsInts,numECCodewords)}catch(rse){throw rse}for(var i=0;numDataCodewords>i;i++)codewordBytes[i]=codewordsInts[i]},Decoder.decode=function(bits){for(var parser=new BitMatrixParser(bits),version=parser.readVersion(),ecLevel=parser.readFormatInformation().ErrorCorrectionLevel,codewords=parser.readCodewords(),dataBlocks=DataBlock.getDataBlocks(codewords,version,ecLevel),totalBytes=0,i=0;i<dataBlocks.length;i++)totalBytes+=dataBlocks[i].NumDataCodewords;for(var resultBytes=new Array(totalBytes),resultOffset=0,j=0;j<dataBlocks.length;j++){var dataBlock=dataBlocks[j],codewordBytes=dataBlock.Codewords,numDataCodewords=dataBlock.NumDataCodewords;Decoder.correctErrors(codewordBytes,numDataCodewords);for(var i=0;numDataCodewords>i;i++)resultBytes[resultOffset++]=codewordBytes[i]}var reader=new QRCodeDataBlockReader(resultBytes,version.VersionNumber,ecLevel.Bits);return reader},qrcode={},qrcode.imagedata=null,qrcode.width=0,qrcode.height=0,qrcode.qrCodeSymbol=null,qrcode.debug=!1,qrcode.maxImgSize=1048576,qrcode.sizeOfDataLengthInfo=[[10,9,8,8],[12,11,16,10],[14,13,16,12]],qrcode.callback=null,qrcode.decode=function(src){if(0==arguments.length){var canvas_qr=document.getElementById(\"qr-canvas\"),context=canvas_qr.getContext(\"2d\");return qrcode.width=canvas_qr.width,qrcode.height=canvas_qr.height,qrcode.imagedata=context.getImageData(0,0,qrcode.width,qrcode.height),qrcode.result=qrcode.process(context),null!=qrcode.callback&&qrcode.callback(qrcode.result),qrcode.result}var image=new Image;image.onload=function(){var canvas_qr=document.createElement(\"canvas\"),context=canvas_qr.getContext(\"2d\"),nheight=image.height,nwidth=image.width;if(image.width*image.height>qrcode.maxImgSize){var ir=image.width/image.height;nheight=Math.sqrt(qrcode.maxImgSize/ir),nwidth=ir*nheight}canvas_qr.width=nwidth,canvas_qr.height=nheight,context.drawImage(image,0,0,canvas_qr.width,canvas_qr.height),qrcode.width=canvas_qr.width,qrcode.height=canvas_qr.height;try{qrcode.imagedata=context.getImageData(0,0,canvas_qr.width,canvas_qr.height)}catch(e){return qrcode.result=\"Cross domain image reading not supported in your browser! Save it to your computer then drag and drop the file!\",void(null!=qrcode.callback&&qrcode.callback(qrcode.result))}try{qrcode.result=qrcode.process(context)}catch(e){console.log(e),qrcode.result=\"error decoding QR Code\"}null!=qrcode.callback&&qrcode.callback(qrcode.result)},image.src=src},qrcode.isUrl=function(s){var regexp=/(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;return regexp.test(s)},qrcode.decode_url=function(s){var escaped=\"\";try{escaped=escape(s)}catch(e){console.log(e),escaped=s}var ret=\"\";try{ret=decodeURIComponent(escaped)}catch(e){console.log(e),ret=escaped}return ret},qrcode.decode_utf8=function(s){return qrcode.isUrl(s)?qrcode.decode_url(s):s},qrcode.process=function(ctx){var start=(new Date).getTime(),image=qrcode.grayScaleToBitmap(qrcode.grayscale());if(qrcode.debug){for(var y=0;y<qrcode.height;y++)for(var x=0;x<qrcode.width;x++){var point=4*x+y*qrcode.width*4;qrcode.imagedata.data[point]=(image[x+y*qrcode.width],0),qrcode.imagedata.data[point+1]=(image[x+y*qrcode.width],0),qrcode.imagedata.data[point+2]=image[x+y*qrcode.width]?255:0}ctx.putImageData(qrcode.imagedata,0,0)}var detector=new Detector(image),qRCodeMatrix=detector.detect();qrcode.debug&&ctx.putImageData(qrcode.imagedata,0,0);for(var reader=Decoder.decode(qRCodeMatrix.bits),data=reader.DataByte,str=\"\",i=0;i<data.length;i++)for(var j=0;j<data[i].length;j++)str+=String.fromCharCode(data[i][j]);var end=(new Date).getTime(),time=end-start;return console.log(time),qrcode.decode_utf8(str)},qrcode.getPixel=function(x,y){if(qrcode.width<x)throw\"point error\";if(qrcode.height<y)throw\"point error\";return point=4*x+y*qrcode.width*4,p=(33*qrcode.imagedata.data[point]+34*qrcode.imagedata.data[point+1]+33*qrcode.imagedata.data[point+2])/100,p},qrcode.binarize=function(th){for(var ret=new Array(qrcode.width*qrcode.height),y=0;y<qrcode.height;y++)for(var x=0;x<qrcode.width;x++){var gray=qrcode.getPixel(x,y);ret[x+y*qrcode.width]=th>=gray?!0:!1}return ret},qrcode.getMiddleBrightnessPerArea=function(image){for(var numSqrtArea=4,areaWidth=Math.floor(qrcode.width/numSqrtArea),areaHeight=Math.floor(qrcode.height/numSqrtArea),minmax=new Array(numSqrtArea),i=0;numSqrtArea>i;i++){minmax[i]=new Array(numSqrtArea);for(var i2=0;numSqrtArea>i2;i2++)minmax[i][i2]=new Array(0,0)}for(var ay=0;numSqrtArea>ay;ay++)for(var ax=0;numSqrtArea>ax;ax++){\nminmax[ax][ay][0]=255;for(var dy=0;areaHeight>dy;dy++)for(var dx=0;areaWidth>dx;dx++){var target=image[areaWidth*ax+dx+(areaHeight*ay+dy)*qrcode.width];target<minmax[ax][ay][0]&&(minmax[ax][ay][0]=target),target>minmax[ax][ay][1]&&(minmax[ax][ay][1]=target)}}for(var middle=new Array(numSqrtArea),i3=0;numSqrtArea>i3;i3++)middle[i3]=new Array(numSqrtArea);for(var ay=0;numSqrtArea>ay;ay++)for(var ax=0;numSqrtArea>ax;ax++)middle[ax][ay]=Math.floor((minmax[ax][ay][0]+minmax[ax][ay][1])/2);return middle},qrcode.grayScaleToBitmap=function(grayScale){for(var middle=qrcode.getMiddleBrightnessPerArea(grayScale),sqrtNumArea=middle.length,areaWidth=Math.floor(qrcode.width/sqrtNumArea),areaHeight=Math.floor(qrcode.height/sqrtNumArea),bitmap=new Array(qrcode.height*qrcode.width),ay=0;sqrtNumArea>ay;ay++)for(var ax=0;sqrtNumArea>ax;ax++)for(var dy=0;areaHeight>dy;dy++)for(var dx=0;areaWidth>dx;dx++)bitmap[areaWidth*ax+dx+(areaHeight*ay+dy)*qrcode.width]=grayScale[areaWidth*ax+dx+(areaHeight*ay+dy)*qrcode.width]<middle[ax][ay]?!0:!1;return bitmap},qrcode.grayscale=function(){for(var ret=new Array(qrcode.width*qrcode.height),y=0;y<qrcode.height;y++)for(var x=0;x<qrcode.width;x++){var gray=qrcode.getPixel(x,y);ret[x+y*qrcode.width]=gray}return ret},Array.prototype.remove=function(from,to){var rest=this.slice((to||from)+1||this.length);return this.length=0>from?this.length+from:from,this.push.apply(this,rest)};var MIN_SKIP=3,MAX_MODULES=57,INTEGER_MATH_SHIFT=8,CENTER_QUORUM=2;qrcode.orderBestPatterns=function(patterns){function distance(pattern1,pattern2){return xDiff=pattern1.X-pattern2.X,yDiff=pattern1.Y-pattern2.Y,Math.sqrt(xDiff*xDiff+yDiff*yDiff)}function crossProductZ(pointA,pointB,pointC){var bX=pointB.x,bY=pointB.y;return(pointC.x-bX)*(pointA.y-bY)-(pointC.y-bY)*(pointA.x-bX)}var pointA,pointB,pointC,zeroOneDistance=distance(patterns[0],patterns[1]),oneTwoDistance=distance(patterns[1],patterns[2]),zeroTwoDistance=distance(patterns[0],patterns[2]);if(oneTwoDistance>=zeroOneDistance&&oneTwoDistance>=zeroTwoDistance?(pointB=patterns[0],pointA=patterns[1],pointC=patterns[2]):zeroTwoDistance>=oneTwoDistance&&zeroTwoDistance>=zeroOneDistance?(pointB=patterns[1],pointA=patterns[0],pointC=patterns[2]):(pointB=patterns[2],pointA=patterns[0],pointC=patterns[1]),crossProductZ(pointA,pointB,pointC)<0){var temp=pointA;pointA=pointC,pointC=temp}patterns[0]=pointA,patterns[1]=pointB,patterns[2]=pointC};"],"sourceRoot":""}